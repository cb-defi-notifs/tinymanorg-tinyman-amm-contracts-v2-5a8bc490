#pragma version 7
txn ApplicationID
pushint 0
==
bz l0_end
pushbytes "fee_setter"
txn Sender
app_global_put
pushbytes "fee_collector"
txn Sender
app_global_put
pushbytes "fee_manager"
txn Sender
app_global_put
pushint 1
return
b l0_end
l0_end: // end
txn OnCompletion
pushint 0 // NoOp
==
bnz main
txn OnCompletion
pushint 1 // OptIn
==
bnz bootstrap
txn OnCompletion
pushint 2 // CloseOut
==
bnz handle_closeout
txn OnCompletion
pushint 4 // UpdateApplication
==
bnz handle_updateapp
txn OnCompletion
pushint 5 // DeleteApplication
==
bnz handle_deleteapp
err // unexpected value
pushint 0
return
handle_updateapp:
pushint 0
return
handle_deleteapp:
pushint 0
return
handle_closeout:
pushint 0
return
bootstrap:
txn ApplicationArgs 0
pushbytes "bootstrap"
==
txn ApplicationArgs 0
pushbytes "\x1dd\x8dm"
==
||
assert
txn ApplicationArgs 1
btoi
store 0 // asset_1_id
txn ApplicationArgs 2
btoi
store 1 // asset_2_id
load 0 // asset_1_id
load 1 // asset_2_id
>
assert
load 0 // asset_1_id
txn Assets 0
==
assert
load 1 // asset_2_id
txn Assets 1
==
assert
pushbytes ""
store 3 // asset_1_unit_name
pushbytes "ALGO"
store 4 // asset_2_unit_name
load 0 // asset_1_id
asset_params_get AssetUnitName
store 2 // exists
store 3 // asset_1_unit_name
load 2 // exists
assert
load 0 // asset_1_id
asset_params_get AssetTotal
store 2 // exists
store 5 // asset_total
load 2 // exists
load 5 // asset_total
pushint 10000 // ASSET_MIN_TOTAL
>=
&&
assert
load 1 // asset_2_id
bz l1_end
load 1 // asset_2_id
asset_params_get AssetUnitName
store 2 // exists
store 4 // asset_2_unit_name
load 2 // exists
assert
load 1 // asset_2_id
asset_params_get AssetTotal
store 2 // exists
store 5 // asset_total
load 2 // exists
load 5 // asset_total
pushint 10000 // ASSET_MIN_TOTAL
>=
&&
assert
b l1_end
l1_end: // end
pushbytes "TinymanPool2.0 "
load 3 // asset_1_unit_name
pushbytes "-"
concat
load 4 // asset_2_unit_name
concat
concat
store 6 // pool_token_asset_name
txn Sender
store 7 // pool_address
pushbytes "\x06\x80\x18\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x81\x00[5\x004\x001\x18\x12D1\x19\x81\x01\x12D\x81\x01C" // TEMPLATE
global CurrentApplicationID
itob
replace2 3
store 8 // program
load 8 // program
txn ApplicationArgs 1
replace2 11
store 8 // program
load 8 // program
txn ApplicationArgs 2
replace2 19
store 8 // program
pushbytes "Program"
load 8 // program
concat
sha512_256
store 9 // hash
load 9 // hash
load 7 // pool_address
==
assert
txn RekeyTo
global CurrentApplicationAddress
==
assert
itxn_begin
pushint 1 // Pay
itxn_field TypeEnum
load 7 // pool_address
itxn_field Sender
global CurrentApplicationAddress
itxn_field Receiver
pushint 200000
itxn_field Amount
pushint 0
itxn_field Fee
itxn_submit
itxn_begin
pushint 3 // Acfg
itxn_field TypeEnum
global CurrentApplicationAddress
itxn_field Sender
pushbytes "TMPOOL2"
itxn_field ConfigAssetUnitName
load 6 // pool_token_asset_name
itxn_field ConfigAssetName
pushint 18446744073709551615 // POOL_TOKEN_TOTAL_SUPPLY
itxn_field ConfigAssetTotal
pushint 6
itxn_field ConfigAssetDecimals
pushbytes "https://tinyman.org"
itxn_field ConfigAssetURL
pushint 0
itxn_field Fee
itxn_submit
itxn CreatedAssetID
store 10 // pool_token_asset_id
itxn_begin
pushint 4 // Axfer
itxn_field TypeEnum
load 7 // pool_address
itxn_field Sender
load 7 // pool_address
itxn_field AssetReceiver
load 0 // asset_1_id
itxn_field XferAsset
pushint 0
itxn_field Amount
pushint 0
itxn_field Fee
itxn_submit
load 1 // asset_2_id
pushint 0
>
bz l2_end
itxn_begin
pushint 4 // Axfer
itxn_field TypeEnum
load 7 // pool_address
itxn_field Sender
load 7 // pool_address
itxn_field AssetReceiver
load 1 // asset_2_id
itxn_field XferAsset
pushint 0
itxn_field Amount
pushint 0
itxn_field Fee
itxn_submit
b l2_end
l2_end: // end
itxn_begin
pushint 4 // Axfer
itxn_field TypeEnum
load 7 // pool_address
itxn_field Sender
load 7 // pool_address
itxn_field AssetReceiver
load 10 // pool_token_asset_id
itxn_field XferAsset
pushint 0
itxn_field Amount
pushint 0
itxn_field Fee
itxn_submit
itxn_begin
pushint 4 // Axfer
itxn_field TypeEnum
global CurrentApplicationAddress
itxn_field Sender
load 7 // pool_address
itxn_field AssetReceiver
load 10 // pool_token_asset_id
itxn_field XferAsset
pushint 18446744073709551615 // POOL_TOKEN_TOTAL_SUPPLY
itxn_field AssetAmount
pushint 0
itxn_field Fee
itxn_submit
pushint 25
store 11 // poolers_fee_share
pushint 5
store 12 // protocol_fee_share
pushint 0
pushbytes "pool_token_asset_id"
load 10 // pool_token_asset_id
app_local_put
pushint 0
pushbytes "asset_1_id"
load 0 // asset_1_id
app_local_put
pushint 0
pushbytes "asset_2_id"
load 1 // asset_2_id
app_local_put
pushint 0
pushbytes "poolers_fee_share"
load 11 // poolers_fee_share
app_local_put
pushint 0
pushbytes "protocol_fee_share"
load 12 // protocol_fee_share
app_local_put
pushint 0
pushbytes "asset_1_reserves"
pushint 0
app_local_put
pushint 0
pushbytes "asset_2_reserves"
pushint 0
app_local_put
pushint 0
pushbytes "issued_pool_tokens"
pushint 0
app_local_put
pushint 0
pushbytes "protocol_fees_asset_1"
pushint 0
app_local_put
pushint 0
pushbytes "protocol_fees_asset_2"
pushint 0
app_local_put
pushint 0
pushbytes "cumulative_asset_1_price"
pushbytes "\x00\x00\x00\x00\x00\x00\x00\x00" // BYTE_ZERO
app_local_put
pushint 0
pushbytes "cumulative_asset_2_price"
pushbytes "\x00\x00\x00\x00\x00\x00\x00\x00" // BYTE_ZERO
app_local_put
pushint 0
pushbytes "cumulative_price_update_timestamp"
global LatestTimestamp
app_local_put
pushint 1
return
main:
txn RekeyTo
global ZeroAddress
==
assert
txn Sender
store 0 // user_address
txn ApplicationArgs 0
pushbytes "set_fee_collector"
==
bnz main__set_fee_collector
txn ApplicationArgs 0
pushbytes "set_fee_setter"
==
bnz main__set_fee_setter
txn ApplicationArgs 0
pushbytes "set_fee_manager"
==
bnz main__set_fee_manager
b main__amm // else
main__set_fee_collector:
load 0 // user_address
pushbytes "fee_manager"
app_global_get
==
assert
pushbytes "fee_collector"
txn Accounts 1
app_global_put
pushint 1
return
main__set_fee_setter:
load 0 // user_address
pushbytes "fee_manager"
app_global_get
==
assert
pushbytes "fee_setter"
txn Accounts 1
app_global_put
pushint 1
return
main__set_fee_manager:
load 0 // user_address
pushbytes "fee_manager"
app_global_get
==
assert
pushbytes "fee_manager"
txn Accounts 1
app_global_put
pushint 1
return
main__amm:
txn Accounts 1
store 1 // pool_address
pushint 1
pushbytes "asset_1_id"
app_local_get
store 2 // asset_1_id
pushint 1
pushbytes "asset_2_id"
app_local_get
store 3 // asset_2_id
pushint 1
pushbytes "pool_token_asset_id"
app_local_get
store 4 // pool_token_asset_id
pushint 1
pushbytes "asset_1_reserves"
app_local_get
store 5 // asset_1_reserves
pushint 1
pushbytes "asset_2_reserves"
app_local_get
store 6 // asset_2_reserves
pushint 1
pushbytes "issued_pool_tokens"
app_local_get
store 7 // issued_pool_tokens
pushint 1
pushbytes "protocol_fees_asset_1"
app_local_get
store 8 // protocol_fees_asset_1
pushint 1
pushbytes "protocol_fees_asset_2"
app_local_get
store 9 // protocol_fees_asset_2
txn ApplicationArgs 0
pushbytes "swap"
==
bnz main__amm__swap
txn ApplicationArgs 0
pushbytes "\xba'-\xc5" // ABI_SWAP
==
bnz main__amm__swap
txn ApplicationArgs 0
pushbytes "add_liquidity"
==
bnz main__amm__add_liquidity
txn ApplicationArgs 0
pushbytes "E\x1d\x91\xb3" // ABI_ADD_LIQUIDITY
==
bnz main__amm__add_liquidity
txn ApplicationArgs 0
pushbytes "remove_liquidity"
==
bnz main__amm__remove_liquidity
txn ApplicationArgs 0
pushbytes "\x10`^T" // ABI_REMOVE_LIQUIDITY
==
bnz main__amm__remove_liquidity
txn ApplicationArgs 0
pushbytes "flash"
==
bnz main__amm__flash
txn ApplicationArgs 0
pushbytes "\x9bQA\x1c" // ABI_FLASH
==
bnz main__amm__flash
txn ApplicationArgs 0
pushbytes "verify_flash"
==
bnz main__amm__verify_flash
txn ApplicationArgs 0
pushbytes "\xfd\xe6\xc1\xb5" // ABI_VERIFY_FLASH
==
bnz main__amm__verify_flash
txn ApplicationArgs 0
pushbytes "claim_fees"
==
bnz main__amm__claim_fees
txn ApplicationArgs 0
pushbytes "xb\xe4\xae" // ABI_CLAIM_FEES
==
bnz main__amm__claim_fees
txn ApplicationArgs 0
pushbytes "claim_extra"
==
bnz main__amm__claim_extra
txn ApplicationArgs 0
pushbytes "z`\x8a\xa5" // ABI_CLAIM_EXTRA
==
bnz main__amm__claim_extra
txn ApplicationArgs 0
pushbytes "set_fee"
==
bnz main__amm__set_fee
txn ApplicationArgs 0
pushbytes "\xfe\x11\xcc[" // ABI_SET_FEE
==
bnz main__amm__set_fee
err // unexpected value
main__amm__swap:
callsub main__amm__func__update_price_oracle
txn ApplicationArgs 1
btoi
store 10 // input_asset_id
txn ApplicationArgs 2
btoi
store 11 // output_asset_id
txn ApplicationArgs 3
btoi
store 12 // min_output
txn ApplicationArgs 4
store 13 // mode
txn GroupIndex
pushint 1
-
store 15 // input_txn_index
load 10 // input_asset_id
pushint 0
==
bz l3_else
load 15 // input_txn_index
gtxns TypeEnum
pushint 1 // Pay
==
assert
load 15 // input_txn_index
gtxns Receiver
load 1 // pool_address
==
assert
load 15 // input_txn_index
gtxns Amount
store 14 // input_amount
b l3_end
l3_else:
load 15 // input_txn_index
gtxns TypeEnum
pushint 4 // Axfer
==
assert
load 15 // input_txn_index
gtxns AssetReceiver
load 1 // pool_address
==
assert
load 15 // input_txn_index
gtxns XferAsset
load 10 // input_asset_id
==
assert
load 15 // input_txn_index
gtxns AssetAmount
store 14 // input_amount
l3_end: // end
load 10 // input_asset_id
load 2 // asset_1_id
==
load 11 // output_asset_id
load 3 // asset_2_id
==
&&
bz l4_elif_0
load 5 // asset_1_reserves
store 16 // input_supply
load 6 // asset_2_reserves
store 17 // output_supply
b l4_end
l4_elif_0:
load 10 // input_asset_id
load 3 // asset_2_id
==
load 11 // output_asset_id
load 2 // asset_1_id
==
&&
bz l4_else
load 6 // asset_2_reserves
store 16 // input_supply
load 5 // asset_1_reserves
store 17 // output_supply
b l4_end
l4_else:
err
l4_end: // end
pushint 0
store 23 // change
load 13 // mode
pushbytes "fixed-input"
==
load 13 // mode
pushbytes "\x00\x0bfixed-input"
==
||
bz l5_elif_0
load 14 // input_amount
callsub __func__calculate_fixed_input_fee_amounts
store 18 // total_fee_amount
store 19 // poolers_fee_amount
store 20 // protocol_fee_amount
load 14 // input_amount
load 18 // total_fee_amount
-
store 21 // swap_amount
load 16 // input_supply
load 17 // output_supply
load 21 // swap_amount
callsub __func__calculate_fixed_input_swap
store 22 // output_amount
load 22 // output_amount
load 12 // min_output
>=
assert
b l5_end
l5_elif_0:
load 13 // mode
pushbytes "fixed-output"
==
load 13 // mode
pushbytes "\x00\x0cfixed-output"
==
||
bz l5_else
load 12 // min_output
store 22 // output_amount
load 16 // input_supply
load 17 // output_supply
load 22 // output_amount
callsub __func__calculate_fixed_output_swap
store 21 // swap_amount
load 21 // swap_amount
callsub __func__calculate_fixed_output_fee_amounts
store 18 // total_fee_amount
store 19 // poolers_fee_amount
store 20 // protocol_fee_amount
load 21 // swap_amount
load 18 // total_fee_amount
+
store 24 // total_input_amount
load 14 // input_amount
load 24 // total_input_amount
-
store 25 // change
load 25 // change
bz l6_end
load 10 // input_asset_id
load 25 // change
callsub main__amm__func__transfer_to_user
b l6_end
l6_end: // end
b l5_end
l5_else:
err
l5_end: // end
pushbytes "input_amount %i"
load 14 // input_amount
itob
concat
log
pushbytes "poolers_fee_amount %i"
load 19 // poolers_fee_amount
itob
concat
log
pushbytes "protocol_fee_amount %i"
load 20 // protocol_fee_amount
itob
concat
log
pushbytes "swap_amount %i"
load 21 // swap_amount
itob
concat
log
pushbytes "output_amount %i"
load 22 // output_amount
itob
concat
log
pushbytes "change %i"
load 25 // change
itob
concat
log
load 10 // input_asset_id
load 2 // asset_1_id
==
bz l7_else
load 8 // protocol_fees_asset_1
load 20 // protocol_fee_amount
+
store 8 // protocol_fees_asset_1
load 5 // asset_1_reserves
load 21 // swap_amount
load 19 // poolers_fee_amount
+
+
store 5 // asset_1_reserves
load 6 // asset_2_reserves
load 22 // output_amount
-
store 6 // asset_2_reserves
b l7_end
l7_else:
load 9 // protocol_fees_asset_2
load 20 // protocol_fee_amount
+
store 9 // protocol_fees_asset_2
load 6 // asset_2_reserves
load 21 // swap_amount
load 19 // poolers_fee_amount
+
+
store 6 // asset_2_reserves
load 5 // asset_1_reserves
load 22 // output_amount
-
store 5 // asset_1_reserves
l7_end: // end
load 11 // output_asset_id
load 22 // output_amount
callsub main__amm__func__transfer_to_user
pushint 1
pushbytes "asset_1_reserves"
load 5 // asset_1_reserves
app_local_put
pushint 1
pushbytes "asset_2_reserves"
load 6 // asset_2_reserves
app_local_put
pushint 1
pushbytes "protocol_fees_asset_1"
load 8 // protocol_fees_asset_1
app_local_put
pushint 1
pushbytes "protocol_fees_asset_2"
load 9 // protocol_fees_asset_2
app_local_put
pushint 1
return
main__amm__flash:
callsub main__amm__func__update_price_oracle
txn ApplicationArgs 1
btoi
store 10 // index_diff
txn ApplicationArgs 2
btoi
store 11 // asset_1_amount
txn ApplicationArgs 3
btoi
store 12 // asset_2_amount
load 11 // asset_1_amount
load 12 // asset_2_amount
||
assert
txn GroupIndex
load 10 // index_diff
+
store 13 // verify_flash_txn_index
load 13 // verify_flash_txn_index
gtxns Sender
txn Sender
==
assert
load 13 // verify_flash_txn_index
gtxns TypeEnum
pushint 6 // Appl
==
assert
load 13 // verify_flash_txn_index
gtxns ApplicationID
global CurrentApplicationID
==
assert
load 13 // verify_flash_txn_index
gtxnsa ApplicationArgs 0
pushbytes "verify_flash"
==
load 13 // verify_flash_txn_index
gtxnsa ApplicationArgs 0
pushbytes "\xfd\xe6\xc1\xb5" // ABI_VERIFY_FLASH
==
||
assert
load 13 // verify_flash_txn_index
gtxnsa ApplicationArgs 1
txn ApplicationArgs 1
==
assert
load 13 // verify_flash_txn_index
gtxnsa ApplicationArgs 2
txn ApplicationArgs 2
==
assert
load 13 // verify_flash_txn_index
gtxnsa ApplicationArgs 3
txn ApplicationArgs 3
==
assert
load 11 // asset_1_amount
bz l8_end
load 2 // asset_1_id
load 11 // asset_1_amount
callsub main__amm__func__transfer_to_user
b l8_end
l8_end: // end
load 12 // asset_2_amount
bz l9_end
load 3 // asset_2_id
load 12 // asset_2_amount
callsub main__amm__func__transfer_to_user
b l9_end
l9_end: // end
pushint 1
return
main__amm__verify_flash:
txn ApplicationArgs 1
btoi
store 10 // index_diff
txn ApplicationArgs 2
btoi
store 11 // asset_1_amount
txn ApplicationArgs 3
btoi
store 12 // asset_2_amount
txn GroupIndex
load 10 // index_diff
-
store 13 // flash_txn_index
load 13 // flash_txn_index
gtxns TypeEnum
pushint 6 // Appl
==
assert
load 13 // flash_txn_index
gtxns ApplicationID
global CurrentApplicationID
==
assert
load 13 // flash_txn_index
gtxnsa ApplicationArgs 0
pushbytes "flash"
==
load 13 // flash_txn_index
gtxnsa ApplicationArgs 0
pushbytes "\x9bQA\x1c" // ABI_FLASH
==
||
assert
pushint 0
store 14 // asset_1_repayment_amount
pushint 0
store 15 // asset_2_repayment_amount
load 11 // asset_1_amount
bz l10_end
load 11 // asset_1_amount
callsub __func__calculate_fixed_input_fee_amounts
store 16 // asset_1_total_fee_amount
store 17 // asset_1_poolers_fee_amount
store 18 // asset_1_protocol_fee_amount
load 11 // asset_1_amount
load 16 // asset_1_total_fee_amount
+
store 14 // asset_1_repayment_amount
load 14 // asset_1_repayment_amount
load 11 // asset_1_amount
>
assert
load 12 // asset_2_amount
bz l11_else
txn GroupIndex
pushint 2
-
store 19 // asset_1_txn_index
b l11_end
l11_else:
txn GroupIndex
pushint 1
-
store 19 // asset_1_txn_index
l11_end: // end
load 19 // asset_1_txn_index
gtxns TypeEnum
pushint 4 // Axfer
==
assert
load 19 // asset_1_txn_index
gtxns AssetReceiver
load 1 // pool_address
==
assert
load 19 // asset_1_txn_index
gtxns XferAsset
load 2 // asset_1_id
==
assert
load 19 // asset_1_txn_index
gtxns AssetAmount
load 14 // asset_1_repayment_amount
>=
assert
load 19 // asset_1_txn_index
gtxns AssetAmount
load 14 // asset_1_repayment_amount
-
store 20 // change
load 20 // change
bz l12_end
load 2 // asset_1_id
load 20 // change
callsub main__amm__func__transfer_to_user
b l12_end
l12_end: // end
load 8 // protocol_fees_asset_1
load 18 // asset_1_protocol_fee_amount
+
store 8 // protocol_fees_asset_1
load 5 // asset_1_reserves
load 17 // asset_1_poolers_fee_amount
+
store 5 // asset_1_reserves
b l10_end
l10_end: // end
load 12 // asset_2_amount
bz l13_end
load 12 // asset_2_amount
callsub __func__calculate_fixed_input_fee_amounts
store 21 // asset_2_total_fee_amount
store 22 // asset_2_poolers_fee_amount
store 23 // asset_2_protocol_fee_amount
load 12 // asset_2_amount
load 21 // asset_2_total_fee_amount
+
store 15 // asset_2_repayment_amount
load 15 // asset_2_repayment_amount
load 12 // asset_2_amount
>
assert
txn GroupIndex
pushint 1
-
store 24 // asset_2_txn_index
pushint 0
store 25 // change
load 3 // asset_2_id
pushint 0
==
bz l14_else
load 24 // asset_2_txn_index
gtxns TypeEnum
pushint 1 // Pay
==
assert
load 24 // asset_2_txn_index
gtxns Receiver
load 1 // pool_address
==
assert
load 24 // asset_2_txn_index
gtxns Amount
load 15 // asset_2_repayment_amount
>=
assert
load 24 // asset_2_txn_index
gtxns Amount
load 15 // asset_2_repayment_amount
-
store 25 // change
b l14_end
l14_else:
load 24 // asset_2_txn_index
gtxns TypeEnum
pushint 4 // Axfer
==
assert
load 24 // asset_2_txn_index
gtxns AssetReceiver
load 1 // pool_address
==
assert
load 24 // asset_2_txn_index
gtxns XferAsset
load 3 // asset_2_id
==
assert
load 24 // asset_2_txn_index
gtxns AssetAmount
load 15 // asset_2_repayment_amount
>=
assert
load 24 // asset_2_txn_index
gtxns AssetAmount
load 15 // asset_2_repayment_amount
-
store 25 // change
l14_end: // end
load 25 // change
bz l15_end
load 3 // asset_2_id
load 25 // change
callsub main__amm__func__transfer_to_user
b l15_end
l15_end: // end
load 9 // protocol_fees_asset_2
load 23 // asset_2_protocol_fee_amount
+
store 9 // protocol_fees_asset_2
load 6 // asset_2_reserves
load 22 // asset_2_poolers_fee_amount
+
store 6 // asset_2_reserves
b l13_end
l13_end: // end
pushint 1
pushbytes "asset_1_reserves"
load 5 // asset_1_reserves
app_local_put
pushint 1
pushbytes "asset_2_reserves"
load 6 // asset_2_reserves
app_local_put
pushint 1
pushbytes "protocol_fees_asset_1"
load 8 // protocol_fees_asset_1
app_local_put
pushint 1
pushbytes "protocol_fees_asset_2"
load 9 // protocol_fees_asset_2
app_local_put
pushint 1
return
main__amm__add_liquidity:
txn GroupIndex
pushint 2
-
store 10 // asset_1_txn_index
load 10 // asset_1_txn_index
gtxns TypeEnum
pushint 4 // Axfer
==
assert
load 10 // asset_1_txn_index
gtxns AssetReceiver
load 1 // pool_address
==
assert
load 10 // asset_1_txn_index
gtxns XferAsset
load 2 // asset_1_id
==
assert
load 10 // asset_1_txn_index
gtxns AssetAmount
store 11 // asset_1_amount
txn GroupIndex
pushint 1
-
store 12 // asset_2_txn_index
load 3 // asset_2_id
pushint 0
==
bz l16_else
load 12 // asset_2_txn_index
gtxns TypeEnum
pushint 1 // Pay
==
assert
load 12 // asset_2_txn_index
gtxns Receiver
load 1 // pool_address
==
assert
load 12 // asset_2_txn_index
gtxns Amount
store 13 // asset_2_amount
b l16_end
l16_else:
load 12 // asset_2_txn_index
gtxns TypeEnum
pushint 4 // Axfer
==
assert
load 12 // asset_2_txn_index
gtxns AssetReceiver
load 1 // pool_address
==
assert
load 12 // asset_2_txn_index
gtxns XferAsset
load 3 // asset_2_id
==
assert
load 12 // asset_2_txn_index
gtxns AssetAmount
store 13 // asset_2_amount
l16_end: // end
load 7 // issued_pool_tokens
bz l17_else
load 11 // asset_1_amount
itob
load 7 // issued_pool_tokens
itob
b*
store 15 // a_temp
load 13 // asset_2_amount
itob
load 7 // issued_pool_tokens
itob
b*
store 16 // b_temp
load 15 // a_temp
load 5 // asset_1_reserves
itob
b/
btoi
store 17 // pool_tokens_out_a
load 16 // b_temp
load 6 // asset_2_reserves
itob
b/
btoi
store 18 // pool_tokens_out_b
load 17 // pool_tokens_out_a
load 18 // pool_tokens_out_b
>
bz l18_else
load 18 // pool_tokens_out_b
store 14 // pool_tokens_out
load 14 // pool_tokens_out
itob
load 5 // asset_1_reserves
itob
b*
load 7 // issued_pool_tokens
itob
b/
btoi
store 19 // expected_asset_1_amount
load 16 // b_temp
load 6 // asset_2_reserves
itob
b%
btoi
bz l19_end
load 19 // expected_asset_1_amount
pushint 1
+
store 19 // expected_asset_1_amount
b l19_end
l19_end: // end
load 11 // asset_1_amount
load 19 // expected_asset_1_amount
-
store 20 // change
load 19 // expected_asset_1_amount
store 11 // asset_1_amount
load 2 // asset_1_id
load 20 // change
callsub main__amm__func__transfer_to_user
b l18_end
l18_else:
load 17 // pool_tokens_out_a
store 14 // pool_tokens_out
load 14 // pool_tokens_out
itob
load 6 // asset_2_reserves
itob
b*
load 7 // issued_pool_tokens
itob
b/
btoi
store 21 // expected_asset_2_amount
load 15 // a_temp
load 5 // asset_1_reserves
itob
b%
btoi
bz l20_end
load 21 // expected_asset_2_amount
pushint 1
+
store 21 // expected_asset_2_amount
b l20_end
l20_end: // end
load 13 // asset_2_amount
load 21 // expected_asset_2_amount
-
store 22 // change
load 21 // expected_asset_2_amount
store 13 // asset_2_amount
load 3 // asset_2_id
load 22 // change
callsub main__amm__func__transfer_to_user
l18_end: // end
load 7 // issued_pool_tokens
load 14 // pool_tokens_out
+
store 7 // issued_pool_tokens
load 5 // asset_1_reserves
load 11 // asset_1_amount
+
store 5 // asset_1_reserves
load 6 // asset_2_reserves
load 13 // asset_2_amount
+
store 6 // asset_2_reserves
b l17_end
l17_else:
load 11 // asset_1_amount
itob
load 13 // asset_2_amount
itob
b*
bsqrt
btoi
store 7 // issued_pool_tokens
load 7 // issued_pool_tokens
pushint 1000 // LOCKED_POOL_TOKENS
-
store 14 // pool_tokens_out
load 11 // asset_1_amount
store 5 // asset_1_reserves
load 13 // asset_2_amount
store 6 // asset_2_reserves
l17_end: // end
load 14 // pool_tokens_out
assert
load 4 // pool_token_asset_id
load 14 // pool_tokens_out
callsub main__amm__func__transfer_to_user
pushint 1
pushbytes "asset_1_reserves"
load 5 // asset_1_reserves
app_local_put
pushint 1
pushbytes "asset_2_reserves"
load 6 // asset_2_reserves
app_local_put
pushint 1
pushbytes "issued_pool_tokens"
load 7 // issued_pool_tokens
app_local_put
pushint 1
return
main__amm__remove_liquidity:
txn GroupIndex
pushint 1
-
store 10 // pool_token_txn_index
load 10 // pool_token_txn_index
gtxns TypeEnum
pushint 4 // Axfer
==
assert
load 10 // pool_token_txn_index
gtxns AssetReceiver
load 1 // pool_address
==
assert
load 10 // pool_token_txn_index
gtxns XferAsset
load 4 // pool_token_asset_id
==
assert
load 10 // pool_token_txn_index
gtxns AssetAmount
store 11 // removed_pool_token_amount
load 11 // removed_pool_token_amount
pushint 1000 // LOCKED_POOL_TOKENS
+
load 7 // issued_pool_tokens
==
bz l21_else
load 5 // asset_1_reserves
store 12 // asset_1_amount
load 6 // asset_2_reserves
store 13 // asset_2_amount
load 7 // issued_pool_tokens
store 11 // removed_pool_token_amount
b l21_end
l21_else:
load 11 // removed_pool_token_amount
itob
load 5 // asset_1_reserves
itob
b*
load 7 // issued_pool_tokens
itob
b/
btoi
store 12 // asset_1_amount
load 11 // removed_pool_token_amount
itob
load 6 // asset_2_reserves
itob
b*
load 7 // issued_pool_tokens
itob
b/
btoi
store 13 // asset_2_amount
l21_end: // end
load 12 // asset_1_amount
load 13 // asset_2_amount
&&
assert
load 2 // asset_1_id
load 12 // asset_1_amount
callsub main__amm__func__transfer_to_user
load 3 // asset_2_id
load 13 // asset_2_amount
callsub main__amm__func__transfer_to_user
pushint 1
pushbytes "asset_1_reserves"
load 5 // asset_1_reserves
load 12 // asset_1_amount
-
app_local_put
pushint 1
pushbytes "asset_2_reserves"
load 6 // asset_2_reserves
load 13 // asset_2_amount
-
app_local_put
pushint 1
pushbytes "issued_pool_tokens"
load 7 // issued_pool_tokens
load 11 // removed_pool_token_amount
-
app_local_put
pushint 1
return
main__amm__claim_fees:
load 0 // user_address
pushbytes "fee_collector"
app_global_get
==
assert
load 8 // protocol_fees_asset_1
load 9 // protocol_fees_asset_2
||
assert
load 2 // asset_1_id
load 8 // protocol_fees_asset_1
callsub main__amm__func__transfer_to_user
load 3 // asset_2_id
load 9 // protocol_fees_asset_2
callsub main__amm__func__transfer_to_user
pushint 1
pushbytes "protocol_fees_asset_1"
pushint 0
app_local_put
pushint 1
pushbytes "protocol_fees_asset_2"
pushint 0
app_local_put
pushint 1
return
main__amm__claim_extra:
load 0 // user_address
pushbytes "fee_collector"
app_global_get
==
assert
pushint 1
load 2 // asset_1_id
callsub __func__get_balance
load 5 // asset_1_reserves
load 8 // protocol_fees_asset_1
+
-
store 10 // asset_1_amount
pushint 1
load 3 // asset_2_id
callsub __func__get_balance
load 6 // asset_2_reserves
load 9 // protocol_fees_asset_2
+
-
store 11 // asset_2_amount
load 10 // asset_1_amount
load 11 // asset_2_amount
||
assert
load 2 // asset_1_id
load 10 // asset_1_amount
callsub main__amm__func__transfer_to_user
load 3 // asset_2_id
load 11 // asset_2_amount
callsub main__amm__func__transfer_to_user
pushint 1
return
main__amm__set_fee:
load 0 // user_address
pushbytes "fee_setter"
app_global_get
==
assert
txn ApplicationArgs 1
btoi
store 10 // poolers_fee_share
txn ApplicationArgs 2
btoi
store 11 // protocol_fee_share
load 10 // poolers_fee_share
pushint 50
<=
assert
load 11 // protocol_fee_share
pushint 10
<=
assert
load 10 // poolers_fee_share
load 11 // protocol_fee_share
>=
assert
load 10 // poolers_fee_share
load 11 // protocol_fee_share
pushint 5
*
>=
assert
pushint 1
pushbytes "poolers_fee_share"
load 10 // poolers_fee_share
app_local_put
pushint 1
pushbytes "protocol_fee_share"
load 11 // protocol_fee_share
app_local_put
pushint 1
return
main__amm__func__transfer_to_user:
store 201 // amount
store 202 // asset_id
load 202 // asset_id
pushint 0
==
bz l22_else
itxn_begin
pushint 1 // Pay
itxn_field TypeEnum
load 1 // pool_address
itxn_field Sender
load 0 // user_address
itxn_field Receiver
load 201 // amount
itxn_field Amount
pushint 0
itxn_field Fee
itxn_submit
b l22_end
l22_else:
itxn_begin
pushint 4 // Axfer
itxn_field TypeEnum
load 1 // pool_address
itxn_field Sender
load 0 // user_address
itxn_field AssetReceiver
load 201 // amount
itxn_field AssetAmount
load 202 // asset_id
itxn_field XferAsset
pushint 0
itxn_field Fee
itxn_submit
l22_end: // end
retsub
main__amm__func__update_price_oracle:
pushint 1
pushbytes "cumulative_asset_1_price"
app_local_get
store 201 // cumulative_asset_1_price
pushint 1
pushbytes "cumulative_asset_2_price"
app_local_get
store 202 // cumulative_asset_2_price
global LatestTimestamp
pushint 1
pushbytes "cumulative_price_update_timestamp"
app_local_get
-
store 203 // time_delta
load 7 // issued_pool_tokens
load 203 // time_delta
&&
bz l23_end
load 201 // cumulative_asset_1_price
load 6 // asset_2_reserves
itob
pushbytes "\x01\x00\x00\x00\x00\x00\x00\x00\x00" // TWO_TO_THE_64
b*
load 203 // time_delta
itob
b*
load 5 // asset_1_reserves
itob
b/
b+
store 201 // cumulative_asset_1_price
load 202 // cumulative_asset_2_price
load 5 // asset_1_reserves
itob
pushbytes "\x01\x00\x00\x00\x00\x00\x00\x00\x00" // TWO_TO_THE_64
b*
load 203 // time_delta
itob
b*
load 6 // asset_2_reserves
itob
b/
b+
store 202 // cumulative_asset_2_price
pushint 1
pushbytes "cumulative_asset_1_price"
load 201 // cumulative_asset_1_price
app_local_put
pushint 1
pushbytes "cumulative_asset_2_price"
load 202 // cumulative_asset_2_price
app_local_put
pushint 1
pushbytes "cumulative_price_update_timestamp"
global LatestTimestamp
app_local_put
b l23_end
l23_end: // end
retsub
__func__calculate_fixed_input_fee_amounts:
store 201 // input_amount
pushint 1
pushbytes "poolers_fee_share"
app_local_get
store 202 // poolers_fee_share
pushint 1
pushbytes "protocol_fee_share"
app_local_get
store 203 // protocol_fee_share
load 202 // poolers_fee_share
load 203 // protocol_fee_share
+
store 204 // total_fee_share
load 201 // input_amount
load 204 // total_fee_share
*
pushint 10000
/
store 205 // total_fee
load 205 // total_fee
load 203 // protocol_fee_share
*
load 204 // total_fee_share
/
store 206 // protocol_fee
load 205 // total_fee
load 206 // protocol_fee
-
store 207 // poolers_fee
load 206 // protocol_fee
load 207 // poolers_fee
load 205 // total_fee
retsub
__func__calculate_fixed_output_fee_amounts:
store 201 // swap_amount
pushint 1
pushbytes "poolers_fee_share"
app_local_get
store 202 // poolers_fee_share
pushint 1
pushbytes "protocol_fee_share"
app_local_get
store 203 // protocol_fee_share
load 201 // swap_amount
pushint 10000
*
pushint 10000
load 202 // poolers_fee_share
load 203 // protocol_fee_share
+
-
/
store 204 // input_amount
load 202 // poolers_fee_share
load 203 // protocol_fee_share
+
store 205 // total_fee_share
load 204 // input_amount
load 205 // total_fee_share
*
pushint 10000
/
store 206 // total_fee
load 206 // total_fee
load 203 // protocol_fee_share
*
load 205 // total_fee_share
/
store 207 // protocol_fee
load 206 // total_fee
load 207 // protocol_fee
-
store 208 // poolers_fee
load 207 // protocol_fee
load 208 // poolers_fee
load 206 // total_fee
retsub
__func__calculate_fixed_input_swap:
store 201 // swap_amount
store 202 // output_supply
store 203 // input_supply
load 203 // input_supply
itob
load 202 // output_supply
itob
b*
store 204 // k
load 202 // output_supply
load 204 // k
load 203 // input_supply
load 201 // swap_amount
+
itob
b/
btoi
-
store 205 // output_amount
load 205 // output_amount
retsub
__func__calculate_fixed_output_swap:
store 201 // output_amount
store 202 // output_supply
store 203 // input_supply
load 203 // input_supply
itob
load 202 // output_supply
itob
b*
store 204 // k
load 204 // k
load 202 // output_supply
load 201 // output_amount
-
itob
b/
btoi
load 203 // input_supply
-
store 205 // input_amount
load 205 // input_amount
retsub
__func__get_balance:
store 201 // asset_id
store 202 // account_idx
pushint 0
store 203 // balance
load 201 // asset_id
pushint 0
==
bz l24_else
load 202 // account_idx
balance
load 202 // account_idx
min_balance
-
store 203 // balance
b l24_end
l24_else:
load 202 // account_idx
load 201 // asset_id
asset_holding_get AssetBalance
pop // discarding value for _
store 203 // balance
l24_end: // end
load 203 // balance
retsub